#include <iostream>
#include <map>
#include <vector>
#include <tuple>
using namespace std;

int main() {
    unsigned n, m;
    cin>>n>>m;
    map<unsigned, unsigned> v;
    unsigned x;
    for(unsigned i = 0; i < m; i++) {
        cin>>x;
        v[x]++;
    }
    
    vector<tuple<unsigned, unsigned> > s;
    for(auto i : v) {
        s.push_back(make_tuple(i.first, i.second));
    }

    // F[i, k] = Max(Vi / j + F(i-1, n - j))
    vector<vector<unsigned> > F(s.size(), vector<unsigned>(n+1, 0));    

    for(auto i : s) {
      cout<<get<0>(i) << " " << get<1>(i)<<endl;
    }

    cout<<"---------"<<endl;
    for(int i = 0;  i < s.size(); i++) {
	unsigned value = get<1>(s[i]);
      F[i][0] = 0;
      F[i][n] = value / n;
      cout<<"xx "<< value << " " << n<<endl;
      if(i == 0)continue;
      for(int k = 1; k < n; k++){
	F[i][k] = max(F[i-1][k], value / k);
	for(int j = 1; j < k; j++) {
	  if (F[i-1][k-j] == 0)continue;

	  cout<<"before fck "<<i<<" "<<k<<" "<<j<<" "<<value<<" "<<F[i][k]<<" "<<F[i-1][k-j]<< " "<<endl;
	  F[i][k] = max(F[i][k], F[i-1][k-j] + value / j);
	  cout<<"fck "<<i<<" "<<k<<" "<<F[i][k]<<endl;
	}
      }
      cout<< i <<" " << F[i][n]<<endl;
    }
    /*


    auto cmp = [](tuple<unsigned, unsigned> &a, tuple<unsigned, unsigned> &b){
                if(get<1>(a) != get<1>(b)) return get<1>(a) > get<1>(b);

                return get<0>(a) < get<0>(b);
            };
    sort(s.begin(), s.end(), cmp);
    while(s.size() < n) {
      //cout<<get<1>(s[0]) << " " << get<1>(s[s.size() - 1])<<endl; 
      get<1>(s[0]) /= 2;
        n--;
    }
    sort(s.begin(), s.end(), cmp);
    */
    cout<<get<1>(s[0]) << " " << get<1>(s[s.size() - 1])<<endl;
}
